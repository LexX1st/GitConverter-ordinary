
&Вместо("ИмпортироватьВерсиюВEDT")
Процедура Ordinary_ИмпортироватьВерсиюВEDT(ВерсияХранилища, Параметры) Экспорт
	
	Если Параметры.Состояние <> Перечисления.СостоянияВерсии.ЗагрузкаМетаданных Тогда
		Возврат;
	КонецЕсли;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindowsСервер = (СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86
		Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64);
	
	ДобавитьЗаписьВЛог(Параметры, НСтр("ru='Начало импорта в 1C:EDT'"));
	ДлительныеОперации.СообщитьПрогресс(10, НСтр("ru = 'Импорт версии в 1C:EDT';"));
	
	НомераВерсии = СтрРазделить(Параметры.ВерсияПлатформы, ".");
	НомераВерсии.Удалить(НомераВерсии.ВГраница());
	ВерсияПроектаEDT = СтрСоединить(НомераВерсии, ".");
	
	СтрокаКоманды = "ring edt workspace import --workspace-location ""%РабочийКаталог%"" --configuration-files ""%КаталогФайловКонфигурации%"" --project ""%КаталогПроектаEDT%"" --version %ВерсияПроектаEDT% >> %ИмяФайлаЛогов% 2>&1";
	
	СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%ИмяФайлаЛогов%", Параметры.ИмяФайлаЛогов);
	Если Прав(Параметры.РабочийКаталогEDT, 1) = ПолучитьРазделительПути() Тогда
		СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%РабочийКаталог%", Лев(Параметры.РабочийКаталогEDT, СтрДлина(Параметры.РабочийКаталогEDT)-1));
	Иначе
		СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%РабочийКаталог%", Параметры.РабочийКаталогEDT);
	КонецЕсли;
	Если Прав(Параметры.КаталогФайловКонфигурации, 1) = ПолучитьРазделительПути() Тогда
		СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%КаталогФайловКонфигурации%", Лев(Параметры.КаталогФайловКонфигурации, СтрДлина(Параметры.КаталогФайловКонфигурации)-1));
	Иначе
		СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%КаталогФайловКонфигурации%", Параметры.КаталогФайловКонфигурации);
	КонецЕсли;
	Если Прав(Параметры.КаталогПроекта, 1) = ПолучитьРазделительПути() Тогда
		СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%КаталогПроектаEDT%", Лев(Параметры.КаталогПроекта, СтрДлина(Параметры.КаталогПроекта)-1));
	Иначе
		СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%КаталогПроектаEDT%", Параметры.КаталогПроекта);
	КонецЕсли;
	СтрокаКоманды = СтрЗаменить(СтрокаКоманды, "%ВерсияПроектаEDT%", ВерсияПроектаEDT);

	Файл = Новый Файл(Параметры.РабочийКаталогEDT);
	Если Файл.Существует() Тогда
		УдалитьФайлы(Параметры.РабочийКаталогEDT, "*");
	КонецЕсли;
	Файл = Новый Файл(Параметры.КаталогПроекта);
	Если Файл.Существует() Тогда
		УдалитьФайлы(Параметры.КаталогПроекта, "*");
	КонецЕсли;
	
	КодВозврата = Неопределено;
	ЗапуститьПриложение(?(ЭтоWindowsСервер, "cmd /C ", "bash -c ")
		+ СтрокаКоманды, Параметры.КаталогВременныхФайлов, Истина, КодВозврата);

	ДобавитьЗаписьВЛог(Параметры, НСтр("ru='Окончание импорта в 1C:EDT'"), "Код возврата: "
		+ ?(КодВозврата = Неопределено, "Неопределено", КодВозврата));
	
	Если КодВозврата <> 0 И НЕ ЭтоОшибкаОбычноегоПриложения(Параметры) Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru = 'При импорте в 1C:EDT возникли ошибки. Подробнее см. файл лога:
			|%1'", Параметры.ИмяФайлаЛогов));
	КонецЕсли;
	
	// Копируем файл дампа в каталог проекта EDT чтобы был доступен для формирования частичной выгрузки
	ИмяФайлаИсточника = Параметры.КаталогВременныхФайлов + "ConfigDumpInfo.xml";
	ИмяФайлаПриемника = Параметры.КаталогФайловПроекта + "ConfigDumpInfo.xml";
	Файл = Новый Файл(ИмяФайлаИсточника);
	Если Файл.Существует() Тогда
		КопироватьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	КонецЕсли;
	
КонецПроцедуры

// Зачитывает лог, чтобы убедиться что это ошибка конвертации обычного приложения
// 
// Параметры:
// 	Параметры - Описание
// Возвращаемое значение:
// 	Описание
Функция ЭтоОшибкаОбычноегоПриложения(Параметры)
	
	ФайлЛога = Новый ТекстовыйДокумент();
	ФайлЛога.Прочитать(Параметры.ИмяФайлаЛогов, КодировкаТекста.UTF8);
	
	НомерСтроки = ФайлЛога.КоличествоСтрок();
	ЗачитыватьСтрок = 7;
	
	ПрочинаоСтрок = 0;
	
	Пока НомерСтроки > 0 И ПрочинаоСтрок < ЗачитыватьСтрок  Цикл
		СтрокаЛога = ФайлЛога.ПолучитьСтроку(НомерСтроки);
		НомерСтроки = НомерСтроки -1;
		ПрочинаоСтрок = ПрочинаоСтрок + 1;
		
		Если ПустаяСтрока(СтрокаЛога) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрНайти(СтрокаЛога, "Основной режим запуска ""OrdinaryApplication"" не поддерживаются.") Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
